defaults: &defaults
  docker:
    - image: circleci/node:8.11.1

  working_directory: ~/codification/cutwater-core
  parallelism: 1
  shell: /bin/bash --login

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: 'Set Pacific Time Zone'
          command: "echo 'America/Los_Angeles' | sudo tee -a /etc/timezone; sudo dpkg-reconfigure -f noninteractive tzdata;"
      - restore_cache:
          name: 'Restore npm Package Cache'
          keys:
            - npm-packages-{{ checksum "package-lock.json" }}
      - run:
          name: 'Install dependencies'
          command: npm ci
      - save_cache:
          name: 'Save npm Package Cache'
          key: npm-packages-{{ checksum "package-lock.json" }}
          paths:
            - /root/.npm
      - run:
          name: 'Clean & Build'
          command: npm run build
      - run:
          name: 'Run Tests'
          command: npm run test-xunit
      - store_test_results:
          path: test-results
      - persist_to_workspace:
          root: ~/codification
          paths:
            - cutwater-core

  release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/codification
      - add_ssh_keys
      - run:
          name: 'Keyscan Github'
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run:
          name: 'Configure git defaults'
          command: git config --global user.email "circleci@codification.org" && git config --global user.name "CircleCI"
      - run:
          name: 'Cut new release'
          command: npm run release:prod

  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/codification
      - run:
          name: 'Authenticate with registry'
          command: printf "//`node -p \"require('url').parse(process.env.NPM_REGISTRY_URL || 'https://registry.npmjs.org').host\"`/:_authToken=${NPM_TOKEN}\nregistry=${NPM_REGISTRY_URL:-https://registry.npmjs.org}\n" >> ~/.npmrc
      - run:
          name: 'Publish package'
          command: npm publish --access public

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - release:
          requires:
            - build
          filters:
            branches:
              only: master
      - publish:
          requires:
            - build
          context: org-codification-global
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
